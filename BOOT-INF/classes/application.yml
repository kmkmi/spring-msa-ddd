server:
  port: 8085

spring:
  application:
    name: data-collector-service
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: data-collector-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 10s
        prefer-ip-address: true
      config:
        enabled: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.datacollector: DEBUG
    org.springframework.kafka: INFO
    org.springframework.data.redis: INFO

---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    consul:
      host: consul
  kafka:
    bootstrap-servers: kafka:9092
  redis:
    host: redis 