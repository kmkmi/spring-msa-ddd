server:
  port: 8082

spring:
  application:
    name: user-service
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      exclude: static/**,public/**,templates/**
    livereload:
      enabled: true
  config:
    activate:
      on-profile: '!test'
    import:
      - "optional:configserver:http://${CONFIG_SERVICE_HOST:localhost}:${CONFIG_SERVICE_PORT:8888}"
      - "optional:consul:"
    fail-fast: true
  cloud:
    compatibility-verifier:
      enabled: false
    config:
      uri: http://${CONFIG_SERVICE_HOST:localhost}:${CONFIG_SERVICE_PORT:8888}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${JWKS_SERVICE_HOST:localhost}:${JWKS_SERVICE_PORT:8090}/oauth2/jwks

# JWT 설정
# secret 키는 사용하지 않음 (키 파일에서 로드)
# private_key.pem, public_key.pem은 src/main/resources/keys/에 위치
jwt:
  expiration: 86400000  # 24시간 (밀리초)
  refresh-expiration: 604800000  # 7일 (밀리초)
  private-key-path: /app/keys/private_key.pem
  public-key-path: /app/keys/public_key.pem

# Swagger UI 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    disable-swagger-default-url: true
    display-request-duration: true
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: docker
    import:
      - "optional:configserver:http://${CONFIG_SERVICE_HOST:config-service}:${CONFIG_SERVICE_PORT:8888}"
      - "optional:consul:"
  cloud:
    compatibility-verifier:
      enabled: false
    config:
      uri: http://${CONFIG_SERVICE_HOST:config-service}:${CONFIG_SERVICE_PORT:8888}
  datasource:
    url: jdbc:mysql://${USER_DB_HOST:user-db}:${USER_DB_PORT:3306}/userdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true&failOverReadOnly=false
    username: root
    password: root
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
  sql:
    init:
      mode: always
      continue-on-error: true
  consul:
    host: ${SPRING_CLOUD_CONSUL_HOST:localhost}
    port: ${SPRING_CLOUD_CONSUL_PORT:8500}
    discovery:
      enabled: true
      service-name: user-service
      health-check-path: /actuator/health
      health-check-interval: 15s
      prefer-ip-address: true
      hostname: user-service
    config:
      fail-fast: true 